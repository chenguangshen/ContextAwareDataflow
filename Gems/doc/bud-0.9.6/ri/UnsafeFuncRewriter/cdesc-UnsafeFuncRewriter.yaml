--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: unsafe_func_called
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Check for whether the rule invokes any &quot;unsafe&quot; functions (functions that might return a different value every time they are called, e.g., budtime). The test for &quot;unsafe&quot; functions is pretty naive: any function call with a nil receiver is treated as unsafe unless it is belongs to a list of &quot;safe&quot; functions (below) or it denotes a lattice identifier. In the latter case, the rule is akin to an implicit join with the lattice, so we only rescan it on deltas to the lattice (see &quot;rescan_on_merge&quot; in LatticeWrapper)."
- !ruby/struct:SM::Flow::P 
  body: Although this is called a rewriter, it doesn't modify the input AST.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: SAFE_FUNC_LIST
  value: "[:int_ip_port, :ip_port, :ip, :port].to_set"
full_name: UnsafeFuncRewriter
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: is_lattice?
- !ruby/object:RI::MethodSummary 
  name: is_safe_func
- !ruby/object:RI::MethodSummary 
  name: process_call
- !ruby/object:RI::MethodSummary 
  name: process_iter
- !ruby/object:RI::MethodSummary 
  name: push_and_process
name: UnsafeFuncRewriter
superclass: SexpProcessor
