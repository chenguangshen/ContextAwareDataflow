--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: A TickLoop is useful when one needs to distribute amounts of work throughout ticks in order to maintain response times. It is also useful for simple repeated checks and metrics.
- !ruby/struct:SM::Flow::VERB 
  body: "  # Here we run through an array one item per tick until it is empty,\n  # printing each element.\n  # When the array is empty, we return :stop from the callback, and the\n  # loop will terminate.\n  # When the loop terminates, the on_stop callbacks will be called.\n  EM.run do\n    array = (1..100).to_a\n\n    tickloop = EM.tick_loop do\n      if array.empty?\n        :stop\n      else\n        puts array.shift\n      end\n    end\n\n    tickloop.on_stop { EM.stop }\n  end\n"
constants: []

full_name: EventMachine::TickLoop
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: on_stop
- !ruby/object:RI::MethodSummary 
  name: start
- !ruby/object:RI::MethodSummary 
  name: stop
- !ruby/object:RI::MethodSummary 
  name: stopped?
name: TickLoop
superclass: Object
