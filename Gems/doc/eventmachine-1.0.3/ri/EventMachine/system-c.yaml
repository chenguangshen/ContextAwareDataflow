--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: EM::system is a simple wrapper for EM::popen. It is similar to Kernel::system, but requires a single string argument for the command and performs no shell expansion.
- !ruby/struct:SM::Flow::P 
  body: "The block or proc passed to EM::system is called with two arguments: the output generated by the command, and a Process::Status that contains information about the command's execution."
- !ruby/struct:SM::Flow::VERB 
  body: " EM.run{\n   EM.system('ls'){ |output,status| puts output if status.exitstatus == 0 }\n }\n"
- !ruby/struct:SM::Flow::P 
  body: "You can also supply an additional proc to send some data to the process:"
- !ruby/struct:SM::Flow::VERB 
  body: " EM.run{\n   EM.system('sh', proc{ |process|\n     process.send_data(&quot;echo hello\\n&quot;)\n     process.send_data(&quot;exit\\n&quot;)\n   }, proc{ |out,status|\n     puts(out)\n   })\n }\n"
- !ruby/struct:SM::Flow::P 
  body: Like EventMachine.popen, EventMachine.system currently does not work on windows. It returns the pid of the spawned process.
full_name: EventMachine::system
is_singleton: true
name: system
params: (cmd, *args, &cb)
visibility: public
