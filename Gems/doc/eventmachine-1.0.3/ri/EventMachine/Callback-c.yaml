--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Utility method for coercing arguments to an object that responds to :call. Accepts an object and a method name to send to, or a block, or an object that responds to :call.
- !ruby/struct:SM::Flow::P 
  body: "@example EventMachine.Callback used with a block. Returns that block."
- !ruby/struct:SM::Flow::VERB 
  body: " cb = EventMachine.Callback do |msg|\n   puts(msg)\n end\n # returned object is a callable\n cb.call('hello world')\n"
- !ruby/struct:SM::Flow::P 
  body: "@example EventMachine.Callback used with an object (to be more specific, class object) and a method name, returns an object that responds to #call"
- !ruby/struct:SM::Flow::VERB 
  body: " cb = EventMachine.Callback(Object, :puts)\n # returned object is a callable that delegates to Kernel#puts (in this case Object.puts)\n cb.call('hello world')\n"
- !ruby/struct:SM::Flow::P 
  body: "@example EventMachine.Callback used with an object that responds to #call. Returns the argument."
- !ruby/struct:SM::Flow::VERB 
  body: " cb = EventMachine.Callback(proc{ |msg| puts(msg) })\n # returned object is a callable\n cb.call('hello world')\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload Callback(object, method)"
- !ruby/struct:SM::Flow::VERB 
  body: "  Wraps `method` invocation on `object` into an object that responds to #call that proxies all the arguments to that method\n  @param [Object] Object to invoke method on\n  @param [Symbol] Method name\n  @return [&lt;#call&gt;] An object that responds to #call that takes any number of arguments and invokes method on object with those arguments\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload Callback(object)"
- !ruby/struct:SM::Flow::VERB 
  body: "  Returns callable object as is, without any coercion\n  @param [&lt;#call&gt;] An object that responds to #call\n  @return [&lt;#call&gt;] Its argument\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload Callback(&amp;block)"
- !ruby/struct:SM::Flow::VERB 
  body: "  Returns block passed to it without any coercion\n  @return [&lt;#call&gt;] Block passed to this method\n"
- !ruby/struct:SM::Flow::P 
  body: "@raise [ArgumentError] When argument doesn't respond to #call, method name is missing or when invoked without arguments and block isn't given"
- !ruby/struct:SM::Flow::P 
  body: "@return [&lt;#call&gt;]"
full_name: EventMachine::Callback
is_singleton: true
name: Callback
params: (object = nil, method = nil, &blk)
visibility: public
