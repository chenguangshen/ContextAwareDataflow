--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Implements Stomp (http://docs.codehaus.org/display/STOMP/Protocol).
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Usage example
- !ruby/struct:SM::Flow::VERB 
  body: " module StompClient\n   include EM::Protocols::Stomp\n\n   def connection_completed\n     connect :login =&gt; 'guest', :passcode =&gt; 'guest'\n   end\n\n   def receive_msg msg\n     if msg.command == &quot;CONNECTED&quot;\n       subscribe '/some/topic'\n     else\n       p ['got a message', msg]\n       puts msg.body\n     end\n   end\n end\n\n EM.run{\n   EM.connect 'localhost', 61613, StompClient\n }\n"
constants: []

full_name: EventMachine::Protocols::Stomp
includes: 
- !ruby/object:RI::IncludedModule 
  name: LineText2
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: ack
- !ruby/object:RI::MethodSummary 
  name: connect
- !ruby/object:RI::MethodSummary 
  name: init_message_reader
- !ruby/object:RI::MethodSummary 
  name: receive_binary_data
- !ruby/object:RI::MethodSummary 
  name: receive_line
- !ruby/object:RI::MethodSummary 
  name: receive_msg
- !ruby/object:RI::MethodSummary 
  name: send
- !ruby/object:RI::MethodSummary 
  name: send_frame
- !ruby/object:RI::MethodSummary 
  name: subscribe
name: Stomp
superclass: 
