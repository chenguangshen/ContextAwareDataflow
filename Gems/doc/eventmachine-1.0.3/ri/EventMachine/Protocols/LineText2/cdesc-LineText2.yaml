--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: In the grand, time-honored tradition of re-inventing the wheel, we offer here YET ANOTHER protocol that handles line-oriented data with interspersed binary text. This one trades away some of the performance optimizations of EventMachine::Protocols::LineAndTextProtocol in order to get better correctness with regard to binary text blocks that can switch back to line mode. It also permits the line-delimiter to change in midstream. This was originally written to support Stomp.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "TODO! We're not enforcing the limits on header lengths and text-lengths. When we get around to that, call #receive_error if the user defined it, otherwise throw exceptions."
  name: MaxLineLength
  value: 16*1024
- !ruby/object:RI::Constant 
  comment: 
  name: MaxBinaryLength
  value: 32*1024*1024
full_name: EventMachine::Protocols::LineText2
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: receive_binary_data
- !ruby/object:RI::MethodSummary 
  name: receive_data
- !ruby/object:RI::MethodSummary 
  name: receive_end_of_binary_data
- !ruby/object:RI::MethodSummary 
  name: receive_line
- !ruby/object:RI::MethodSummary 
  name: set_binary_mode
- !ruby/object:RI::MethodSummary 
  name: set_delimiter
- !ruby/object:RI::MethodSummary 
  name: set_line_mode
- !ruby/object:RI::MethodSummary 
  name: set_text_mode
- !ruby/object:RI::MethodSummary 
  name: unbind
name: LineText2
superclass: 
