--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: parms=
comment: 
- !ruby/struct:SM::Flow::P 
  body: This is a protocol handler for the server side of SMTP. It's NOT a complete SMTP server obeying all the semantics of servers conforming to RFC2821. Rather, it uses overridable method stubs to communicate protocol states and data to user code. User code is responsible for doing the right things with the data in order to get complete and correct SMTP server behavior.
- !ruby/struct:SM::Flow::P 
  body: "Simple SMTP server example:"
- !ruby/struct:SM::Flow::VERB 
  body: " class EmailServer &lt; EM::P::SmtpServer\n   def receive_plain_auth(user, pass)\n     true\n   end\n\n   def get_server_domain\n     &quot;mock.smtp.server.local&quot;\n   end\n\n   def get_server_greeting\n     &quot;mock smtp server greets you with impunity&quot;\n   end\n\n   def receive_sender(sender)\n     current.sender = sender\n     true\n   end\n\n   def receive_recipient(recipient)\n     current.recipient = recipient\n     true\n   end\n\n   def receive_message\n     current.received = true\n     current.completed_at = Time.now\n\n     p [:received_email, current]\n     @current = OpenStruct.new\n     true\n   end\n\n   def receive_ehlo_domain(domain)\n     @ehlo_domain = domain\n     true\n   end\n\n   def receive_data_command\n     current.data = &quot;&quot;\n     true\n   end\n\n   def receive_data_chunk(data)\n     current.data &lt;&lt; data.join(&quot;\\n&quot;)\n     true\n   end\n\n   def receive_transaction\n     if @ehlo_domain\n       current.ehlo_domain = @ehlo_domain\n       @ehlo_domain = nil\n     end\n     true\n   end\n\n   def current\n     @current ||= OpenStruct.new\n   end\n\n   def self.start(host = 'localhost', port = 1025)\n     require 'ostruct'\n     @server = EM.start_server host, port, self\n   end\n\n   def self.stop\n     if @server\n       EM.stop_server @server\n       @server = nil\n     end\n   end\n\n   def self.running?\n     !!@server\n   end\n end\n\n EM.run{ EmailServer.start }\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: HeloRegex
  value: /\AHELO\s*/i
- !ruby/object:RI::Constant 
  comment: 
  name: EhloRegex
  value: /\AEHLO\s*/i
- !ruby/object:RI::Constant 
  comment: 
  name: QuitRegex
  value: /\AQUIT/i
- !ruby/object:RI::Constant 
  comment: 
  name: MailFromRegex
  value: /\AMAIL FROM:\s*/i
- !ruby/object:RI::Constant 
  comment: 
  name: RcptToRegex
  value: /\ARCPT TO:\s*/i
- !ruby/object:RI::Constant 
  comment: 
  name: DataRegex
  value: /\ADATA/i
- !ruby/object:RI::Constant 
  comment: 
  name: NoopRegex
  value: /\ANOOP/i
- !ruby/object:RI::Constant 
  comment: 
  name: RsetRegex
  value: /\ARSET/i
- !ruby/object:RI::Constant 
  comment: 
  name: VrfyRegex
  value: /\AVRFY\s+/i
- !ruby/object:RI::Constant 
  comment: 
  name: ExpnRegex
  value: /\AEXPN\s+/i
- !ruby/object:RI::Constant 
  comment: 
  name: HelpRegex
  value: /\AHELP/i
- !ruby/object:RI::Constant 
  comment: 
  name: StarttlsRegex
  value: /\ASTARTTLS/i
- !ruby/object:RI::Constant 
  comment: 
  name: AuthRegex
  value: /\AAUTH\s+/i
full_name: EventMachine::Protocols::SmtpServer
includes: 
- !ruby/object:RI::IncludedModule 
  name: Protocols::LineText2
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: connection_ended
- !ruby/object:RI::MethodSummary 
  name: get_server_domain
- !ruby/object:RI::MethodSummary 
  name: get_server_greeting
- !ruby/object:RI::MethodSummary 
  name: init_protocol_state
- !ruby/object:RI::MethodSummary 
  name: parms=
- !ruby/object:RI::MethodSummary 
  name: post_init
- !ruby/object:RI::MethodSummary 
  name: process_auth
- !ruby/object:RI::MethodSummary 
  name: process_auth_line
- !ruby/object:RI::MethodSummary 
  name: process_data
- !ruby/object:RI::MethodSummary 
  name: process_data_line
- !ruby/object:RI::MethodSummary 
  name: process_ehlo
- !ruby/object:RI::MethodSummary 
  name: process_expn
- !ruby/object:RI::MethodSummary 
  name: process_helo
- !ruby/object:RI::MethodSummary 
  name: process_help
- !ruby/object:RI::MethodSummary 
  name: process_mail_from
- !ruby/object:RI::MethodSummary 
  name: process_noop
- !ruby/object:RI::MethodSummary 
  name: process_quit
- !ruby/object:RI::MethodSummary 
  name: process_rcpt_to
- !ruby/object:RI::MethodSummary 
  name: process_rset
- !ruby/object:RI::MethodSummary 
  name: process_starttls
- !ruby/object:RI::MethodSummary 
  name: process_unknown
- !ruby/object:RI::MethodSummary 
  name: process_vrfy
- !ruby/object:RI::MethodSummary 
  name: receive_data_chunk
- !ruby/object:RI::MethodSummary 
  name: receive_data_command
- !ruby/object:RI::MethodSummary 
  name: receive_ehlo_domain
- !ruby/object:RI::MethodSummary 
  name: receive_line
- !ruby/object:RI::MethodSummary 
  name: receive_message
- !ruby/object:RI::MethodSummary 
  name: receive_plain_auth
- !ruby/object:RI::MethodSummary 
  name: receive_recipient
- !ruby/object:RI::MethodSummary 
  name: receive_reset
- !ruby/object:RI::MethodSummary 
  name: receive_sender
- !ruby/object:RI::MethodSummary 
  name: receive_transaction
- !ruby/object:RI::MethodSummary 
  name: reset_protocol_state
- !ruby/object:RI::MethodSummary 
  name: send_server_greeting
- !ruby/object:RI::MethodSummary 
  name: unbind
name: SmtpServer
superclass: EventMachine::Connection
