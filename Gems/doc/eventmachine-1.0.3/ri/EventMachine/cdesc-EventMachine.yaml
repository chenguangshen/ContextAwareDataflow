--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Exposed to allow joining on the thread, when run in a multithreaded environment. Performing other actions on the thread has undefined semantics (read: a dangerous endevor)."
  - !ruby/struct:SM::Flow::P 
    body: "@return [Thread]"
  name: reactor_thread
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: threadpool
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Size of the EventMachine.defer threadpool (defaults to 20) @return [Number]
  name: threadpool_size
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: Callback
- !ruby/object:RI::MethodSummary 
  name: _open_file_for_writing
- !ruby/object:RI::MethodSummary 
  name: add_oneshot_timer
- !ruby/object:RI::MethodSummary 
  name: add_periodic_timer
- !ruby/object:RI::MethodSummary 
  name: add_shutdown_hook
- !ruby/object:RI::MethodSummary 
  name: add_timer
- !ruby/object:RI::MethodSummary 
  name: attach
- !ruby/object:RI::MethodSummary 
  name: attach_io
- !ruby/object:RI::MethodSummary 
  name: bind_connect
- !ruby/object:RI::MethodSummary 
  name: bind_connect_server
- !ruby/object:RI::MethodSummary 
  name: cancel_timer
- !ruby/object:RI::MethodSummary 
  name: close_connection
- !ruby/object:RI::MethodSummary 
  name: connect
- !ruby/object:RI::MethodSummary 
  name: connect_server
- !ruby/object:RI::MethodSummary 
  name: connect_unix_domain
- !ruby/object:RI::MethodSummary 
  name: connect_unix_server
- !ruby/object:RI::MethodSummary 
  name: connection_count
- !ruby/object:RI::MethodSummary 
  name: defer
- !ruby/object:RI::MethodSummary 
  name: defers_finished?
- !ruby/object:RI::MethodSummary 
  name: disable_proxy
- !ruby/object:RI::MethodSummary 
  name: enable_proxy
- !ruby/object:RI::MethodSummary 
  name: epoll
- !ruby/object:RI::MethodSummary 
  name: error_handler
- !ruby/object:RI::MethodSummary 
  name: event_callback
- !ruby/object:RI::MethodSummary 
  name: fork_reactor
- !ruby/object:RI::MethodSummary 
  name: get_max_timers
- !ruby/object:RI::MethodSummary 
  name: get_outbound_data_size
- !ruby/object:RI::MethodSummary 
  name: get_peername
- !ruby/object:RI::MethodSummary 
  name: get_sock_opt
- !ruby/object:RI::MethodSummary 
  name: heartbeat_interval
- !ruby/object:RI::MethodSummary 
  name: heartbeat_interval=
- !ruby/object:RI::MethodSummary 
  name: initialize_event_machine
- !ruby/object:RI::MethodSummary 
  name: klass_from_handler
- !ruby/object:RI::MethodSummary 
  name: library_type
- !ruby/object:RI::MethodSummary 
  name: next_tick
- !ruby/object:RI::MethodSummary 
  name: open_datagram_socket
- !ruby/object:RI::MethodSummary 
  name: open_keyboard
- !ruby/object:RI::MethodSummary 
  name: open_udp_socket
- !ruby/object:RI::MethodSummary 
  name: popen
- !ruby/object:RI::MethodSummary 
  name: reactor_running?
- !ruby/object:RI::MethodSummary 
  name: reactor_thread?
- !ruby/object:RI::MethodSummary 
  name: read_keyboard
- !ruby/object:RI::MethodSummary 
  name: reconnect
- !ruby/object:RI::MethodSummary 
  name: release_machine
- !ruby/object:RI::MethodSummary 
  name: run
- !ruby/object:RI::MethodSummary 
  name: run_block
- !ruby/object:RI::MethodSummary 
  name: run_deferred_callbacks
- !ruby/object:RI::MethodSummary 
  name: run_machine
- !ruby/object:RI::MethodSummary 
  name: schedule
- !ruby/object:RI::MethodSummary 
  name: send_data
- !ruby/object:RI::MethodSummary 
  name: send_datagram
- !ruby/object:RI::MethodSummary 
  name: send_file_data
- !ruby/object:RI::MethodSummary 
  name: set_comm_inactivity_timeout
- !ruby/object:RI::MethodSummary 
  name: set_descriptor_table_size
- !ruby/object:RI::MethodSummary 
  name: set_effective_user
- !ruby/object:RI::MethodSummary 
  name: set_max_timer_count
- !ruby/object:RI::MethodSummary 
  name: set_max_timers
- !ruby/object:RI::MethodSummary 
  name: set_quantum
- !ruby/object:RI::MethodSummary 
  name: set_rlimit_nofile
- !ruby/object:RI::MethodSummary 
  name: set_sock_opt
- !ruby/object:RI::MethodSummary 
  name: set_timer_quantum
- !ruby/object:RI::MethodSummary 
  name: signal_loopbreak
- !ruby/object:RI::MethodSummary 
  name: spawn
- !ruby/object:RI::MethodSummary 
  name: spawn_threadpool
- !ruby/object:RI::MethodSummary 
  name: ssl?
- !ruby/object:RI::MethodSummary 
  name: start_server
- !ruby/object:RI::MethodSummary 
  name: start_tcp_server
- !ruby/object:RI::MethodSummary 
  name: start_unix_domain_server
- !ruby/object:RI::MethodSummary 
  name: start_unix_server
- !ruby/object:RI::MethodSummary 
  name: stop
- !ruby/object:RI::MethodSummary 
  name: stop_event_loop
- !ruby/object:RI::MethodSummary 
  name: stop_server
- !ruby/object:RI::MethodSummary 
  name: stop_tcp_server
- !ruby/object:RI::MethodSummary 
  name: system
- !ruby/object:RI::MethodSummary 
  name: tick_loop
- !ruby/object:RI::MethodSummary 
  name: watch
- !ruby/object:RI::MethodSummary 
  name: watch_file
- !ruby/object:RI::MethodSummary 
  name: watch_process
- !ruby/object:RI::MethodSummary 
  name: yield
- !ruby/object:RI::MethodSummary 
  name: yield_and_notify
comment: 
- !ruby/struct:SM::Flow::P 
  body: Top-level EventMachine namespace. If you are looking for EventMachine examples, see {file:docs/GettingStarted.md EventMachine tutorial}.
- !ruby/struct:SM::Flow::P 
  body: "## Key methods ## ### Starting and stopping the event loop ###"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.run}"
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.stop_event_loop}"
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "### Implementing clients ###"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.connect}"
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "### Implementing servers ###"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.start_server}"
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "### Working with timers ###"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.add_timer}"
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.add_periodic_timer}"
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.cancel_timer}"
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "### Working with blocking tasks ###"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.defer}"
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.next_tick}"
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "### Efficient proxying ###"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.enable_proxy}"
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "{EventMachine.disable_proxy}"
  type: :BULLET
constants: 
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: TimerFired
  value: "100"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: ConnectionData
  value: "101"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: ConnectionUnbound
  value: "102"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: ConnectionAccepted
  value: "103"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: ConnectionCompleted
  value: "104"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: LoopbreakSignalled
  value: "105"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: System errnos @private
  name: ERRNOS
  value: Errno::constants.grep(/^E/).inject(Hash.new(:unknown)) { |hash, name|     errno = Errno.__send__(:const_get, name)
full_name: EventMachine
includes: []

instance_methods: []

name: EventMachine
superclass: 
