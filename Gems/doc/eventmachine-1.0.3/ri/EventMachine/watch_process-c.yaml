--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: c
comment: 
- !ruby/struct:SM::Flow::P 
  body: EventMachine's process monitoring API. On Mac OS X and *BSD this method is implemented using kqueue.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: " module ProcessWatcher\n   def process_exited\n     put 'the forked child died!'\n   end\n end\n\n pid = fork{ sleep }\n\n EventMachine.run {\n   EventMachine.watch_process(pid, ProcessWatcher)\n   EventMachine.add_timer(1){ Process.kill('TERM', pid) }\n }\n"
- !ruby/struct:SM::Flow::P 
  body: "@param [Integer] pid PID of the process to watch. @param [Class, Module] handler A class or module that implements event handlers associated with the file."
full_name: EventMachine::watch_process
is_singleton: true
name: watch_process
params: (pid, handler=nil, *args) {|c| ...}
visibility: public
